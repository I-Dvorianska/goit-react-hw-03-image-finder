{"version":3,"sources":["Searchbar/Searchbar.jsx","ImageGalleryItem/ImageGalleryItem.jsx","ImageGallery/ImageGallery.jsx","Button/Button.jsx","Modal/Modal.jsx","utils/fetchApi.jsx","App.js","index.js"],"names":["Searchbar","state","search","getSearchText","e","setState","currentTarget","value","trim","onSearchBtnClick","onSubmit","props","preventDefault","this","className","type","onChange","autoComplete","autoFocus","placeholder","Component","ImageGalleryItem","id","webformatURL","selectImage","largeImageURL","onClick","src","alt","ImageGallery","images","selected","map","image","Button","onBtnClick","page","onLoad","newPage","Modal","onEscClick","code","window","addEventListener","fetchImages","nameImg","pageNumber","fetch","then","response","ok","json","Promise","reject","Error","App","searchText","loading","selectedImage","notify","toast","scrollToBottom","scrollTo","top","document","documentElement","scrollHeight","behavior","getSearchFieldText","text","changePageNumber","onClose","prevProps","prevState","res","imagesData","hits","length","finally","containerStyle","left","toastOptions","duration","style","border","padding","color","height","width","marginLeft","marginTop","marginBottom","timeout","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.49890e9d.chunk.js","sourcesContent":["import { Component } from \"react\";\r\nimport './Searchbar.css';\r\n\r\nclass Searchbar extends Component {\r\n  state = {\r\n    search: \"\",\r\n  };\r\n\r\n  getSearchText = (e) => {\r\n    this.setState({\r\n      search: e.currentTarget.value.trim(),\r\n    });\r\n  };\r\n\r\n  \r\n\r\n    onSearchBtnClick = (e) => {\r\n      const { onSubmit } = this.props;\r\n      const { search } = this.state;\r\n\r\n      e.preventDefault();\r\n      onSubmit(search);\r\n\r\n      \r\n  };\r\n\r\n    render() {\r\n        const { onSearchBtnClick, getSearchText, state} = this;\r\n\r\n\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form className=\"SearchForm\" onSubmit={onSearchBtnClick}>\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            onChange={getSearchText}\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            value={state.search}\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Searchbar;\r\n","import './ImageGalleryItem.css';\r\n\r\nconst ImageGalleryItem = ({ id, webformatURL,selectImage, largeImageURL}) => {\r\n  \r\n  return <li key={id} className=\"ImageGalleryItem\" onClick={() => selectImage(largeImageURL)}>\r\n  <img src={webformatURL} alt=\"\" className=\"ImageGalleryItem-image\" />\r\n</li>\r\n}\r\n\r\nexport default ImageGalleryItem;","import './ImageGallery.css';\r\nimport ImageGalleryItem from 'ImageGalleryItem/ImageGalleryItem';\r\n\r\nconst ImageGallery = ({ images, selected }) => {\r\n   \r\n    return <ul className=\"ImageGallery\">\r\n        {images.map(image =>\r\n            <ImageGalleryItem\r\n                id={image.id}\r\n                key={image.id}\r\n                webformatURL={image.webformatURL}\r\n                largeImageURL={image.largeImageURL}\r\n                selectImage={selected}\r\n             />\r\n             )}\r\n            </ul>\r\n}\r\n\r\nexport default ImageGallery;","import { Component } from 'react';\r\nimport './Button.css';\r\n\r\nclass Button extends Component {\r\n\r\n    onBtnClick = (page, onLoad) => {\r\n       \r\n    const newPage = this.props.page + 1;\r\n    this.props.onLoad(newPage)\r\n    }\r\n\r\n    render() {\r\n        const { onBtnClick } = this;\r\n\r\n        return <button type=\"button\" className=\"Button\" onClick={ onBtnClick}>Load more</button>\r\n    }\r\n}\r\n\r\nexport default Button;","import { Component } from 'react';\r\nimport './Modal.css';\r\n\r\n// const Modal = ({image, onClick}) => {\r\n//     return <div className=\"Overlay\" onClick={onClick}>\r\n//   <div className=\"Modal\">\r\n//     <img src={image} alt=\"\" />\r\n//   </div>\r\n//   </div>\r\n// }\r\n\r\nclass Modal extends Component  {\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.onEscClick)\r\n  }\r\n\r\n  onEscClick = (e) => {\r\n    const { onClick } = this.props;\r\n    if (e.code === 'Escape') {\r\n      onClick();\r\n    }\r\n  }\r\n \r\n  render() {\r\n    const { onClick, image } = this.props;\r\n    \r\n     return <div className=\"Overlay\" onClick={onClick}>\r\n    <div className=\"Modal\">\r\n    <img src={image} alt=\"\" />\r\n  </div>\r\n  </div>\r\n  }\r\n   \r\n}\r\n\r\nexport default Modal;","function fetchImages(nameImg, pageNumber) {\r\n  const URL = 'https://pixabay.com/api';\r\n  const KEY = '22634549-5cdc48e9fdfcb009c2ce01724';\r\n\r\n  return fetch(\r\n    `${URL}/?q=${nameImg}&page=${pageNumber}&key=${KEY}&image_type=photo&orientation=horizontal&per_page=12`,\r\n  ).then(response => {\r\n    if (response.ok) {\r\n      return response.json();\r\n    }\r\n    return Promise.reject(new Error(`Мы не нашли такой картинки по запросу ${nameImg}`));\r\n  });\r\n}\r\n\r\n\r\n\r\nexport default fetchImages;","import { Component } from \"react\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport Loader from \"react-loader-spinner\";\nimport Searchbar from \"./Searchbar/Searchbar\";\nimport \"./App.css\";\nimport ImageGallery from \"./ImageGallery/ImageGallery\";\nimport Button from \"./Button/Button\";\nimport Modal from \"./Modal/Modal\";\nimport toast, { Toaster } from \"react-hot-toast\";\nimport fetchImages from \"utils/fetchApi\";\n\nclass App extends Component {\n  state = {\n    searchText: \"\",\n    images: [],\n    page: 1,\n    loading: false,\n    selectedImage: \"null\",\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const { page, searchText } = this.state;\n\n    if (prevState.searchText !== searchText) {\n      this.setState({ images: [], loading: true });\n\n      fetchImages(searchText, 1).then((res) => {\n        const imagesData = res.hits;\n        if (imagesData.length === 0) {\n          this.notify();\n        } else {\n          this.setState({ images: imagesData, loading: false });\n        }\n      });\n    }\n\n    if (prevState.page !== page) {\n      if (page !== 1) {\n        this.setState({ loading: true });\n        fetchImages(searchText, page)\n          .then((res) => {\n            const imagesData = res.hits;\n            this.setState({\n              images: [...this.state.images, ...imagesData],\n              loading: false,\n            });\n          })\n          .finally(this.scrollToBottom);\n      }\n    }\n  }\n\n  notify = () => toast(\"Here is no images to show\");\n\n  scrollToBottom = () => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: \"smooth\",\n    });\n  };\n\n  getSearchFieldText = (text) => {\n    this.setState({\n      searchText: text,\n    });\n  };\n\n  changePageNumber = (page) => {\n    this.setState({ page });\n  };\n\n  selectImage = (image) => {\n    this.setState({ selectedImage: image });\n  };\n\n  onClose = () => {\n    this.setState({ selectedImage: \"null\" });\n  };\n\n  render() {\n    const { getSearchFieldText, changePageNumber, selectImage, onClose } = this;\n    const { images, page, loading, selectedImage } = this.state;\n\n    return (\n      <>\n        <Searchbar onSubmit={getSearchFieldText} />\n        <Toaster\n          containerStyle={{\n            top: 300,\n            left: 0,\n          }}\n          toastOptions={{\n            duration: 2000,\n            style: {\n              border: \"2px solid #e60000\",\n              padding: \"8px\",\n              color: \"#e60000\",\n            },\n          }}\n        />\n        {images.length > 0 && (\n          <ImageGallery images={images} selected={selectImage} />\n        )}\n        {loading && (\n          <div className=\"LoaderDiv\">\n            <Loader\n              type=\"Circles\"\n              color=\"#46c5f0\"\n              height={40}\n              width={60}\n              style={{\n                marginLeft: \"610px\",\n                marginTop: \"20px\",\n                marginBottom: \"20px\",\n              }}\n              timeout={1000}\n            />\n          </div>\n        )}\n        {selectedImage !== \"null\" && (\n          <Modal image={selectedImage} onClick={onClose} />\n        )}\n        {images.length > 0 && !loading && (\n          <Button page={page} onLoad={changePageNumber} />\n        )}\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}